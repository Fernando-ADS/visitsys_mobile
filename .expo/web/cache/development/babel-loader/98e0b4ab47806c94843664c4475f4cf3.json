{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { css } from \"../assets/css/Css\";\nimport Scanner from \"../components/Scanner\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nexport default function Home() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  var _useState5 = useState('Não escaneado'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var askFormCameraPermission = function askFormCameraPermission() {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status == 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n\n  useEffect(function () {\n    askFormCameraPermission();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n    setText(data);\n    console.log('Type:  ' + type + '\\nData: ' + data);\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, null, \"Requisi\\xE7\\xE3o da c\\xE2mera ...\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(View, null, React.createElement(Text, null, \"Sem acesso \\xE0 c\\xE2mera\"), React.createElement(Button, {\n      title: 'Allow',\n      onPress: function onPress() {\n        return askFormCameraPermission;\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: css.camera\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: StyleSheet.absoluteFillObject\n  }), React.createElement(Text, {\n    style: css.login_button\n  }, text), scanned && React.createElement(Button, {\n    title: 'Tentar novamente',\n    onPress: function onPress() {\n      return setScanned(false);\n    }\n  }));\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalVisible = _React$useState2[0],\n      setModalVisible = _React$useState2[1];\n\n  var imgbkg = \"../assets/img/fundo.png\";\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      type = _React$useState4[0],\n      setType = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      data = _React$useState6[0],\n      setData = _React$useState6[1];\n\n  var onCodeScanned = function onCodeScanned(type, data) {\n    setType(type);\n    setData(data);\n    setModalVisible(false);\n  };\n\n  return React.createElement(ImageBackground, {\n    source: require(imgbkg),\n    style: css.img\n  }, React.createElement(View, {\n    style: css.container\n  }, React.createElement(Modal, {\n    visible: modalVisible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {\n      return setModalVisible(false);\n    }\n  }, React.createElement(View, {\n    style: css.modal\n  }, React.createElement(Scanner, {\n    onCodeScanned: onCodeScanned\n  }), React.createElement(Button, {\n    title: \"Cancelar\",\n    onPress: function onPress() {\n      return setModalVisible(false);\n    }\n  }))), React.createElement(StatusBar, {\n    style: \"auto\"\n  }), React.createElement(Text, null, \"Type: \", type), React.createElement(Text, null, \"Data: \", data), React.createElement(Button, {\n    title: \"Escanear\",\n    onPress: function onPress() {\n      return setModalVisible(true);\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Fernando/Documents/UFOP/TCC2/visitsys_mobile/views/Home.js"],"names":["StatusBar","React","css","Scanner","BarCodeScanner","Home","useState","hasPermission","setHasPermission","scanned","setScanned","text","setText","askFormCameraPermission","requestPermissionsAsync","status","useEffect","handleBarCodeScanned","type","data","console","log","camera","undefined","StyleSheet","absoluteFillObject","login_button","modalVisible","setModalVisible","imgbkg","setType","setData","onCodeScanned","require","img","container","modal"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, Button, Modal, ImageBackground } from 'react-native';\r\nimport {css} from '../assets/css/Css';\r\nimport Scanner from \"../components/Scanner\";\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n\r\n\r\nexport default function Home() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [text, setText] = useState('Não escaneado');\r\n\r\n  const askFormCameraPermission=() => {\r\n    ( async() => {\r\n      const{status} = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status == 'granted')\r\n    })()\r\n  }\r\n\r\n  //Permissão\r\n  useEffect(() => {\r\n    askFormCameraPermission();\r\n  }, []);\r\n\r\n\r\n  //\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    setText(data);\r\n    console.log('Type:  ' + type + '\\nData: ' + data);\r\n  }\r\n\r\n  //Verificar permissão\r\n  if (hasPermission === null) {\r\n    return <Text>Requisição da câmera ...</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return (\r\n      <View>\r\n        <Text>Sem acesso à câmera</Text>\r\n        <Button title={'Allow'} onPress={() => askFormCameraPermission}/>\r\n      </View>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={css.camera}>\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={StyleSheet.absoluteFillObject}\r\n      />\r\n      <Text style={css.login_button}>{text}</Text>\r\n\r\n      {scanned && <Button title={'Tentar novamente'} onPress={() => setScanned(false)} />}\r\n      </View>\r\n  );\r\n\r\n\r\n  const [modalVisible, setModalVisible] = React.useState(false);\r\n  const imgbkg = \"../assets/img/fundo.png\";\r\n\r\n  const [type, setType] = React.useState(\"\");\r\n  const [data, setData] = React.useState(\"\");\r\n\r\n  const onCodeScanned = (type,data) => {\r\n      setType(type);\r\n      setData(data);\r\n      setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n    <ImageBackground source={require(imgbkg)} style={css.img}>\r\n\r\n    <View style={css.container}>\r\n      <Modal\r\n        visible= {modalVisible}\r\n        transparent= {true}\r\n        animationType=\"fade\"\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n\r\n      <View style={css.modal}>\r\n        <Scanner onCodeScanned={onCodeScanned}/>\r\n        <Button title=\"Cancelar\" onPress={() => setModalVisible(false)}/>\r\n      </View>\r\n      </Modal>\r\n\r\n    <StatusBar style=\"auto\" />\r\n    <Text>Type: {type}</Text>\r\n    <Text>Data: {data}</Text>\r\n\r\n\r\n\r\n    <Button title=\"Escanear\" onPress={() => setModalVisible(true)}/>\r\n    </View>\r\n      </ImageBackground>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}