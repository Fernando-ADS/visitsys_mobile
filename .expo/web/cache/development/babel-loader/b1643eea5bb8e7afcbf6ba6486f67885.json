{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { css } from \"../assets/css/Css\";\nimport Scanner from \"../components/Scanner\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nexport default function Home() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  var _useState5 = useState('Não escaneado'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var askFormCameraPermission = function askFormCameraPermission() {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status == 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n\n  useEffect(function () {\n    askFormCameraPermission();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n    setText(data);\n    console.log('Type:  ' + type + '\\nData: ' + data);\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(View, null, React.createElement(Text, null, \"Requisi\\xE7\\xE3o da c\\xE2mera ...\"));\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(View, null, React.createElement(Text, null, \"Sem acesso \\xE0 c\\xE2mera\"), React.createElement(Button, {\n      title: 'Allow',\n      onPress: function onPress() {\n        return askFormCameraPermission();\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: css.container\n  }, React.createElement(View, {\n    style: css.camera\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: {\n      height: 400,\n      width: 400\n    }\n  })), React.createElement(Text, {\n    style: css.login_button\n  }, text), scanned && React.createElement(Button, {\n    title: 'Tentar novamente',\n    onPress: function onPress() {\n      return setScanned(false);\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Fernando/Documents/UFOP/TCC2/visitsys_mobile/views/Home.js"],"names":["StatusBar","React","useState","useEffect","css","Scanner","BarCodeScanner","Home","hasPermission","setHasPermission","scanned","setScanned","text","setText","askFormCameraPermission","requestPermissionsAsync","status","handleBarCodeScanned","type","data","console","log","container","camera","undefined","height","width","login_button"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,SAAQC,GAAR;AACA,OAAOC,OAAP;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAGA,eAAe,SAASC,IAAT,GAAgB;AAC7B,kBAA0CL,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOM,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA8BP,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOQ,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwBT,QAAQ,CAAC,eAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpC,KAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACsBR,cAAc,CAACS,uBAAf,EADtB;;AAAA;AAAA;AACMC,cAAAA,MADN,yBACMA,MADN;AAEAP,cAAAA,gBAAgB,CAACO,MAAM,IAAI,SAAX,CAAhB;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;AAID,GALD;;AAQAb,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,uBAAuB;AACxB,GAFQ,EAEN,EAFM,CAAT;;AAMA,MAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAoB;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC/CR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYH,IAAZ,GAAmB,UAAnB,GAAgCC,IAA5C;AACD,GAJD;;AAOA,MAAIX,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WACE,oBAAC,IAAD,QACE,oBAAC,IAAD,4CADF,CADF;AAKD;;AAED,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AAC3B,WACE,oBAAC,IAAD,QACE,oBAAC,IAAD,oCADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,OAAf;AAAwB,MAAA,OAAO,EAAE;AAAA,eAAMM,uBAAuB,EAA7B;AAAA;AAAjC,MAFF,CADF;AAMD;;AAGD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,GAAG,CAACkB;AAAjB,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,GAAG,CAACmB;AAAjB,KACE,oBAAC,cAAD;AACE,IAAA,gBAAgB,EAAEb,OAAO,GAAGc,SAAH,GAAeP,oBAD1C;AAEA,IAAA,KAAK,EAAE;AAACQ,MAAAA,MAAM,EAAC,GAAR;AAAaC,MAAAA,KAAK,EAAC;AAAnB;AAFP,IADF,CADA,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,GAAG,CAACuB;AAAjB,KAAgCf,IAAhC,CAPF,EASGF,OAAO,IAAI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,kBAAf;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,CAAC,KAAD,CAAhB;AAAA;AAA5C,IATd,CADF;AAaD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Button, Modal, ImageBackground } from 'react-native';\r\nimport {css} from '../assets/css/Css';\r\nimport Scanner from \"../components/Scanner\";\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n\r\n\r\nexport default function Home() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false)\r\n  const [text, setText] = useState('Não escaneado');\r\n\r\n  const askFormCameraPermission = () => {\r\n    ( async() => {\r\n      const{status} = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status == 'granted')\r\n    })()\r\n  }\r\n\r\n  //Permissão\r\n  useEffect(() => {\r\n    askFormCameraPermission();\r\n  }, []);\r\n\r\n\r\n  //\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    setText(data);\r\n    console.log('Type:  ' + type + '\\nData: ' + data);\r\n  }\r\n\r\n  //Verificar permissão\r\n  if (hasPermission === null) {\r\n    return (\r\n      <View>\r\n        <Text>Requisição da câmera ...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (hasPermission === false) {\r\n    return (\r\n      <View>\r\n        <Text>Sem acesso à câmera</Text>\r\n        <Button title={'Allow'} onPress={() => askFormCameraPermission()}/>\r\n      </View>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={css.container}>\r\n    <View style={css.camera}>\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n      style={{height:400, width:400}}/>\r\n      </View>\r\n\r\n      <Text style={css.login_button}>{text}</Text>\r\n\r\n      {scanned && <Button title={'Tentar novamente'} onPress={() => setScanned(false)} />}\r\n      </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}